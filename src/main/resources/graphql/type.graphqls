type Test{
    id: Int!
    data: DateTime!
    nome: String!
    ordineCasuale: Boolean!
    domandeConNumero: Boolean!
    domande: [Domanda]!
}

type Domanda{
    id: Int!
    nome: String!
    testo: String!
    punti: Float!
    ordineCasuale: Boolean!
    risposteConNumero: Boolean!
    risposte: [Risposta]!
}

type Risposta{
    id: Int!
    testo: String!
    domanda: Domanda
}

type TestInfo{
    compilazione: Compilazione!
    test: Test!
}

type DomandaInfo{
    id: Int!
    alreadyExists: Boolean!
}

type User{
    id: Int!
    username: String
    name: String
    roles: String
    active: Boolean
}

type CompilazioneRisposta{
    id: Int!
    domanda: Int!
    risposta: Int
}

type Compilazione{
    id: Int!
    test: Int!
    compilazioniRisposte: [CompilazioneRisposta]!
    user: Int
}

type Result{
    testoDomanda: String!
    puntiDomanda: Float!
    risposteConNumero: Boolean!
    selectedTestoRisposta: String!
    selectedRispostaPunteggio: Float!
    correctTestoRispostaList: [String]!
}

type ResultInfo{
    nomeTest: String!
    dataTest: DateTime!
    domandeConNumero: Boolean!
    results: [Result]!
}